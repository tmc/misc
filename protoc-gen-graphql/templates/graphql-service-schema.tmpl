# GraphQL schema for {{ .Desc.Name }}

{{- $schema := (schema .) }}

extend type Query {
{{ range $schema.RootQuery.Fields }}
{{ if .Comment }}  """
  {{ comment .Name .Comment }}
  """{{ end }}
  {{ .Name }}(input: {{ .Input }}): {{ .Type }}
{{ end }}
}

type Mutation {
{{ range $schema.RootMutation.Fields }}
{{ if .Comment }}  """
  {{ comment .Name .Comment }}
  """{{ end }}
  {{ .Name }}(input: {{ .Input }}): {{ .Type }}
{{ end }}
}

{{ range (reverse $schema.Types) }}
{{ if .Comment }}"""
{{ comment .Name .Comment }}
"""{{ end }}
type {{ .Name }} {
{{- range .Fields }}
{{ if .Comment }}  """
  {{ comment .Name .Comment }}
  """{{ end }}
  {{ .Name }}: {{ .Type }}
{{- end }}
}
{{ end }}

{{ range $schema.Inputs }}
{{ if .Comment }}"""
{{ comment .Name .Comment }}
"""{{ end }}
input {{ .Name }} {
{{ range .Fields -}}
{{ if .Comment }}  """
  {{ comment .Name .Comment }}
  """{{ end }}
  {{ .Name }}: {{ .Type }}
{{ end -}}
}
{{ end }}

{{ range $schema.Enums }}
{{ if .Comment }}"""
{{ comment .Name .Comment }}
"""{{ end }}
enum {{ .Name }} {
{{- range .Options }}
{{ if .Comment }}  """
  {{ comment .Name .Comment }}
  """{{ end }}
  {{ .Name }}
{{- end }}
}
{{ end }}

{{ range $schema.Unions }}
union {{ .Name }} = {{ .Types | join " | " }}
{{ end }}

{{ range $schema.Scalars }}
scalar {{ .Name }}
{{ end }}

