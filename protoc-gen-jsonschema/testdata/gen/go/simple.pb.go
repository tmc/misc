// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: simple.proto

package simple

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Enum for testing
type SimpleEnum int32

const (
	SimpleEnum_SIMPLE_ENUM_UNSPECIFIED SimpleEnum = 0
	SimpleEnum_SIMPLE_ENUM_ONE         SimpleEnum = 1
	SimpleEnum_SIMPLE_ENUM_TWO         SimpleEnum = 2
	SimpleEnum_SIMPLE_ENUM_THREE       SimpleEnum = 3
)

// Enum value maps for SimpleEnum.
var (
	SimpleEnum_name = map[int32]string{
		0: "SIMPLE_ENUM_UNSPECIFIED",
		1: "SIMPLE_ENUM_ONE",
		2: "SIMPLE_ENUM_TWO",
		3: "SIMPLE_ENUM_THREE",
	}
	SimpleEnum_value = map[string]int32{
		"SIMPLE_ENUM_UNSPECIFIED": 0,
		"SIMPLE_ENUM_ONE":         1,
		"SIMPLE_ENUM_TWO":         2,
		"SIMPLE_ENUM_THREE":       3,
	}
)

func (x SimpleEnum) Enum() *SimpleEnum {
	p := new(SimpleEnum)
	*p = x
	return p
}

func (x SimpleEnum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SimpleEnum) Descriptor() protoreflect.EnumDescriptor {
	return file_simple_proto_enumTypes[0].Descriptor()
}

func (SimpleEnum) Type() protoreflect.EnumType {
	return &file_simple_proto_enumTypes[0]
}

func (x SimpleEnum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SimpleEnum.Descriptor instead.
func (SimpleEnum) EnumDescriptor() ([]byte, []int) {
	return file_simple_proto_rawDescGZIP(), []int{0}
}

// Simple message for testing
type SimpleMessage struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// A basic string field
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// A number field
	Id int32 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	// A boolean flag
	Active bool `protobuf:"varint,3,opt,name=active,proto3" json:"active,omitempty"`
	// A list of strings
	Tags          []string `protobuf:"bytes,4,rep,name=tags,proto3" json:"tags,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SimpleMessage) Reset() {
	*x = SimpleMessage{}
	mi := &file_simple_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SimpleMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SimpleMessage) ProtoMessage() {}

func (x *SimpleMessage) ProtoReflect() protoreflect.Message {
	mi := &file_simple_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SimpleMessage.ProtoReflect.Descriptor instead.
func (*SimpleMessage) Descriptor() ([]byte, []int) {
	return file_simple_proto_rawDescGZIP(), []int{0}
}

func (x *SimpleMessage) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SimpleMessage) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SimpleMessage) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *SimpleMessage) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

var File_simple_proto protoreflect.FileDescriptor

const file_simple_proto_rawDesc = "" +
	"\n" +
	"\fsimple.proto\x12\x06simple\"_\n" +
	"\rSimpleMessage\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\x05R\x02id\x12\x16\n" +
	"\x06active\x18\x03 \x01(\bR\x06active\x12\x12\n" +
	"\x04tags\x18\x04 \x03(\tR\x04tags*j\n" +
	"\n" +
	"SimpleEnum\x12\x1b\n" +
	"\x17SIMPLE_ENUM_UNSPECIFIED\x10\x00\x12\x13\n" +
	"\x0fSIMPLE_ENUM_ONE\x10\x01\x12\x13\n" +
	"\x0fSIMPLE_ENUM_TWO\x10\x02\x12\x15\n" +
	"\x11SIMPLE_ENUM_THREE\x10\x03B;Z9github.com/tmc/misc/protoc-gen-jsonschema/testdata/simpleb\x06proto3"

var (
	file_simple_proto_rawDescOnce sync.Once
	file_simple_proto_rawDescData []byte
)

func file_simple_proto_rawDescGZIP() []byte {
	file_simple_proto_rawDescOnce.Do(func() {
		file_simple_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_simple_proto_rawDesc), len(file_simple_proto_rawDesc)))
	})
	return file_simple_proto_rawDescData
}

var file_simple_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_simple_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_simple_proto_goTypes = []any{
	(SimpleEnum)(0),       // 0: simple.SimpleEnum
	(*SimpleMessage)(nil), // 1: simple.SimpleMessage
}
var file_simple_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_simple_proto_init() }
func file_simple_proto_init() {
	if File_simple_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_simple_proto_rawDesc), len(file_simple_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_simple_proto_goTypes,
		DependencyIndexes: file_simple_proto_depIdxs,
		EnumInfos:         file_simple_proto_enumTypes,
		MessageInfos:      file_simple_proto_msgTypes,
	}.Build()
	File_simple_proto = out.File
	file_simple_proto_goTypes = nil
	file_simple_proto_depIdxs = nil
}
