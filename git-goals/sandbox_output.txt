+ set -euo pipefail
++ git rev-parse --show-toplevel
+ repo_root=/Users/tmc/go/src/github.com/tmc/misc
+ '[' -z /Users/tmc/go/src/github.com/tmc/misc ']'
+ COPY=false
+ REMOVE_CONTAINER=false
+ NAMESPACE=sandbox-exec
+ SANDBOX_DEPTH=0
+ SANDBOX_DEPTH=1
+ SANDBOX_EXTRA_ENV=SANDBOX_EXTRA_ENV
+ [[ 1 -gt 0 ]]
+ case "$1" in
+ break
+ WS_ROOT=/Users/tmc/go/src/github.com/tmc/misc
+ export DOTFILES_HOME=/Users/tmc
+ DOTFILES_HOME=/Users/tmc
+ export BASHRC_PATH=/Users/tmc/.bashrc
+ BASHRC_PATH=/Users/tmc/.bashrc
++ pwd
+ current_path=/Users/tmc/go/src/github.com/tmc/misc/git-goals
+ relative_path=git-goals
+++ dirname /Users/tmc/go/src/github.com/tmc/misc/sandbox-exec/sandbox-exec
++ cd /Users/tmc/go/src/github.com/tmc/misc/sandbox-exec
++ pwd
+ script_dir=/Users/tmc/go/src/github.com/tmc/misc/sandbox-exec
+ dockerfile_path=/Users/tmc/go/src/github.com/tmc/misc/sandbox-exec/.sandbox-exec.dockerfile
+ dockerfile_context=/Users/tmc/go/src/github.com/tmc/misc/sandbox-exec
++ md5sum /Users/tmc/go/src/github.com/tmc/misc/sandbox-exec/.sandbox-exec.dockerfile
++ cut -c-5
+ docker_tag=sandbox-exec:00596
++ docker images -q sandbox-exec:00596
+ '[' '!' d53cb8fad5dc ']'
+ '[' '!' -z '' ']'
++ date +%s
+ container_name=sandbox-exec-d1-1723444626-10965
+ '[' false = true ']'
+ git notes --ref=sandbox-exec append -m sandbox-exec-d1-1723444626-10965
+ '[' -f /Users/tmc/.bashrc_sandbox-exec ']'
+ BASHRC_PATH=/Users/tmc/.bashrc_sandbox-exec
+ BASHRC_MOUNT='-v /Users/tmc/.bashrc_sandbox-exec:/root/.bashrc:ro'
+ docker_run_opts=
+ '[' false = true ']'
+ start_container ./test-git-goals.sh
+ common_opts=('-it' '--name' 'sandbox-exec-d1-1723444626-10965' '-v' '/Users/tmc/go/src/github.com/tmc/misc:/workspace' '-v' '/var/run/docker.sock:/var/run/docker.sock' '-v' '/Users/tmc/.gitconfig:/root/.gitconfig:ro' '-v' '/Users/tmc/.bashrc_sandbox-exec:/root/.bashrc:ro' '-e' 'DOTFILES_HOME' '-e' 'BASHRC_PATH' '-e' 'SANDBOX_EXTRA_ENV' '-e' 'SANDBOX_DEPTH=1' '-e' 'WS_ROOT=/Users/tmc/go/src/github.com/tmc/misc' '--net=host' '-w' '/workspace' 'sandbox-exec:00596')
+ local common_opts
+ '[' 1 -eq 0 ']'
+ docker run -it --name sandbox-exec-d1-1723444626-10965 -v /Users/tmc/go/src/github.com/tmc/misc:/workspace -v /var/run/docker.sock:/var/run/docker.sock -v /Users/tmc/.gitconfig:/root/.gitconfig:ro -v /Users/tmc/.bashrc_sandbox-exec:/root/.bashrc:ro -e DOTFILES_HOME -e BASHRC_PATH -e SANDBOX_EXTRA_ENV -e SANDBOX_DEPTH=1 -e WS_ROOT=/Users/tmc/go/src/github.com/tmc/misc --net=host -w /workspace sandbox-exec:00596 /bin/bash -c 'cd '\''git-goals'\'' && exec ./test-git-goals.sh'
Setting up test repository...
[33mhint: Using 'master' as the name for the initial branch. This default branch name[m
[33mhint: is subject to change. To configure the initial branch name to use in all[m
[33mhint: of your new repositories, which will suppress this warning, call:[m
[33mhint: [m
[33mhint: 	git config --global init.defaultBranch <name>[m
[33mhint: [m
[33mhint: Names commonly chosen instead of 'master' are 'main', 'trunk' and[m
[33mhint: 'development'. The just-created branch can be renamed via this command:[m
[33mhint: [m
[33mhint: 	git branch -m <name>[m
Initialized empty Git repository in /tmp/tmp.JZNorehSps/.git/
[master (root-commit) 3f2f317] Initial commit
Testing git-goals...
$ git goals create Implement new feature
git: 'goals' is not a git command. See 'git --help'.
