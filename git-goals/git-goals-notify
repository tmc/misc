#!/usr/bin/env bash
WARNING_DAYS=${WARNING_DAYS:-7}

set -euo pipefail

source "$(dirname "$0")/git-goals-common.sh"

load_config
NOTE_REF_NAME=${NOTE_REF_NAME:-goals}
DATE_FORMAT=${DATE_FORMAT:-%Y-%m-%d}
MAX_GOALS_DISPLAY=${MAX_GOALS_DISPLAY:-0}

set -euo pipefail
load_config
check_args "$@"

echo -e "\033[1mChecking for approaching deadlines..."
if [ -z "$(git notes --ref=goals list)" ]; then
    echo -e "\033[1mNo goals found. Nothing to notify."
    exit 0
fi

current_date=$(date +%Y-%m-%d)
warning_days=${WARNING_DAYS:-7}

git notes --ref=goals list | while read -r commit_hash note_ref; do
    goal_data=$(git notes --ref=goals show "$commit_hash")
    goal_id=$(echo -e "\033[1m$goal_data" | grep "^id:" | cut -d" " -f2-)
    deadline=$(echo -e "\033[1m$goal_data" | grep "^deadline:" | cut -d" " -f2-)
    status=$(echo -e "\033[1m$goal_data" | grep "^status:" | cut -d" " -f2-)
    
    if [ -n "$deadline" ] && [ "$status" != "completed" ]; then
        days_until_deadline=$(( ($(date -d "$deadline" +%s) - $(date -d "$current_date" +%s) ) / 86400 ))
        if [ $days_until_deadline -le $warning_days ] && [ $days_until_deadline -ge 0 ]; then
            echo -e "\033[1mWARNING: Goal $goal_id ($description) is due in $days_until_deadline days!"
        elif [ $days_until_deadline -lt 0 ]; then
            echo -e "\033[1mALERT: Goal $goal_id is overdue by $(( -days_until_deadline )) days!"
        fi
    fi
done
# TODO: Enhance notification system to integrate with priority sorting feature
# Get goals sorted by priority
sorted_goals=$(git goals list | sort -k5,5 -r)

# Display notifications for high priority goals first
echo "$sorted_goals" | while read -r goal; do
    goal_id=$(echo "$goal" | awk "{print $2}")
    priority=$(echo "$goal" | awk "{print $5}")
    deadline=$(git goals show "$goal_id" | grep "^deadline:" | cut -d" " -f2-)
    
    if [ -n "$deadline" ]; then
        days_until_deadline=$(( ($(date -d "$deadline" +%s) - $(date -d "$current_date" +%s) ) / 86400 ))
        if [ $days_until_deadline -le $warning_days ] && [ $days_until_deadline -ge 0 ]; then
            echo -e "033[1mWARNING: High priority goal $goal_id is due in $days_until_deadline days!"
        elif [ $days_until_deadline -lt 0 ]; then
            echo -e "033[1mALERT: High priority goal $goal_id is overdue by $(( -days_until_deadline )) days!"
        fi
    fi
done
# Get goals sorted by priority
sorted_goals=$(git goals list | sort -k5,5 -r)

# Display notifications for high priority goals first
echo "$sorted_goals" | while read -r goal; do
    goal_id=$(echo "$goal" | awk "{print $2}")
    priority=$(echo "$goal" | awk "{print $5}")
    deadline=$(git goals show "$goal_id" | grep "^deadline:" | cut -d" " -f2-)
    
    if [ -n "$deadline" ]; then
        days_until_deadline=$(( ($(date -d "$deadline" +%s) - $(date -d "$current_date" +%s) ) / 86400 ))
        if [ $days_until_deadline -le $warning_days ] && [ $days_until_deadline -ge 0 ]; then
            echo -e "033[1mWARNING: High priority goal $goal_id is due in $days_until_deadline days!"
        elif [ $days_until_deadline -lt 0 ]; then
            echo -e "033[1mALERT: High priority goal $goal_id is overdue by $(( -days_until_deadline )) days!"
        fi
    fi
done
# TODO: Consider implementing more advanced notification features, such as email or desktop notifications
