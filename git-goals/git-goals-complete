#!/usr/bin/bash

set -euo pipefail

source "$(dirname "$0")/git-goals-common.sh"

load_config
NOTE_REF_NAME=${NOTE_REF_NAME:-goals}
DATE_FORMAT=${DATE_FORMAT:-%Y-%m-%d}
MAX_GOALS_DISPLAY=${MAX_GOALS_DISPLAY:-0}


set -euo pipefail
load_config
check_args "$@"


if [ $# -lt 1 ]; then
    echo -e "\033[1mUsage: git goals complete <goal_id> [attempt_id] [rationale]"
    exit 1
fi

goal_id="$1"
attempt_id="${2:-}"
rationale="${3:-}"

commit_hash=$(git notes --ref=goals list | grep "$goal_id" | awk "{print \$1}")

if [ -z "$commit_hash" ]; then
    echo -e "\033[1mError: Goal with ID $goal_id not found."
    exit 1
fi

current_data=$(git notes --ref=goals show "$commit_hash")
updated_data=$(echo -e "\033[1m$current_data" | sed "s/^status:.*$/status: completed/")
updated_data+="
completed_at: $(date -I)"

if [ -n "$attempt_id" ]; then
    updated_data+="
attempt_id: $attempt_id"
fi

if [ -n "$rationale" ]; then
    updated_data+="
rationale: $rationale"
fi

echo -e "\033[1m$updated_data" | git notes --ref=goals add -f -F - "$commit_hash"

echo -e "\033[1mGoal $goal_id marked as complete"
if [ -n "$rationale" ]; then
    echo -e "\033[1mRationale: $rationale"
fi
