#!/usr/bin/env bash

set -euo pipefail

VERSION="0.2.16"
# Load plugins
declare -A GIT_GOALS_COMMANDS

git_goals_register_command() {
    local command_name="$1"
    local function_name="$2"
    local description="$3"
    GIT_GOALS_COMMANDS["$command_name"]="$function_name"
    GIT_GOALS_COMMANDS["${command_name}_description"]="$description"
}

for plugin in plugins/*.sh; do
    if [ -f "$plugin" ] && [ -x "$plugin" ]; then
        source "$plugin"
    fi
done

print_usage() {
    echo "Usage: git goals <subcommand> [<args>]"
    echo "Available subcommands:"
    echo "  create, list, show, update, delete, complete, report, recover, notify, prioritize, deadline"
    for cmd in "${!GIT_GOALS_COMMANDS[@]}"; do
        if [[ ! $cmd =~ _description$ ]]; then
            echo "  $cmd: ${GIT_GOALS_COMMANDS[${cmd}_description]}"
        fi
    done
    echo "Use --version to display version information"
    echo "Use <subcommand> --help for more information about a specific subcommand"
}

if [ $# -eq 0 ]; then
    print_usage
    exit 1
fi

case "$1" in
    notify|prioritize|deadline)
        shift
        "git-goals-$1" "$@"
        ;;
    create|list|show|update|delete|complete|report|recover)
        shift
        "git-goals-$1" "$@"
        ;;
    --version)
        echo "git-goals version $VERSION"
        exit 0
        ;;
    *)
        if [[ -n "${GIT_GOALS_COMMANDS[$1]}" ]]; then
            ${GIT_GOALS_COMMANDS[$1]} "$@"
        else
            echo "Error: Unknown subcommand '$1'" >&2
            print_usage
            exit 1
        fi
        ;;
esac
