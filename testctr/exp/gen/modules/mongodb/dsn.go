// Code generated by parse-tc-module. DO NOT EDIT.

package mongodb

import (
	"context"
	"fmt"
	"testing"

	"github.com/tmc/misc/testctr"
	"github.com/tmc/misc/testctr/ctropts"
)

// DSNProvider implements testctr.DSNProvider for MongoDB.
type DSNProvider struct{}

// CreateDatabase creates a new database within the MongoDB container for the current test.
func (p DSNProvider) CreateDatabase(c *testctr.Container, t testing.TB, dbName string) (string, error) {
	t.Helper()
	
	// MongoDB databases are created on first use, so we just return the DSN
	return p.FormatDSN(c, dbName), nil
}

// DropDatabase removes the specified database from the MongoDB container.
func (p DSNProvider) DropDatabase(c *testctr.Container, dbName string) error {
	_, _, err := c.Exec(context.Background(), []string{
		"mongosh", "--eval", fmt.Sprintf("db.getSiblingDB('%s').dropDatabase()", dbName),
	})
	return err
}

// FormatDSN returns a DSN string for connecting to the specified database.
func (p DSNProvider) FormatDSN(c *testctr.Container, dbName string) string {
	return fmt.Sprintf("mongodb://root:example@%s/%s", c.Endpoint("27017"), dbName)
}

// WithDSN returns a testctr.Option that enables DSN support for MongoDB containers.
func WithDSN() testctr.Option {
	return ctropts.WithDSNProvider(DSNProvider{})
}
