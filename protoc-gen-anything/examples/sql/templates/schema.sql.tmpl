-- GENERATION_BEHAVIOR: overwrite
-- SQL schema generated from Protocol Buffers
-- DO NOT EDIT - Generated by protoc-gen-anything

-- Database schema
CREATE DATABASE IF NOT EXISTS blog_db
    CHARACTER SET = utf8mb4
    COLLATE = utf8mb4_unicode_ci;

USE blog_db;

-- Drop tables in reverse order (to handle foreign key constraints)
DROP TABLE IF EXISTS comments;
DROP TABLE IF EXISTS posts;
DROP TABLE IF EXISTS users;

-- Create tables
{{ range .File.Messages }}
{{- $message := . }}
{{- $isTable := messageExtension . "sql.options.is_table" }}
{{- $skip := messageExtension . "sql.options.skip" }}
{{- if and (not $skip) (or $isTable (isNil $isTable)) }}
{{- $tableName := or (messageExtension . "sql.options.table_name") (snakeCase .GoIdent.GoName) }}
{{- $engine := or (messageExtension . "sql.options.engine") "InnoDB" }}
{{- $charset := or (messageExtension . "sql.options.charset") "utf8mb4" }}
{{- $collation := or (messageExtension . "sql.options.collation") "utf8mb4_unicode_ci" }}
{{- $comment := messageExtension . "sql.options.comment" }}

-- Table: {{ $tableName }}
CREATE TABLE IF NOT EXISTS {{ $tableName }} (
    {{- range .Fields }}
    {{- $fieldSkip := fieldExtension . "sql.options.skip" }}
    {{- if not $fieldSkip }}
    {{- $columnName := or (fieldExtension . "sql.options.column_name") (snakeCase .GoName) }}
    {{- $columnType := or (fieldExtension . "sql.options.column_type") (sqlType .) }}
    {{- $constraints := fieldExtension . "sql.options.constraints" }}
    {{- $defaultValue := fieldExtension . "sql.options.default_value" }}
    {{ $columnName }} {{ $columnType }}{{ if $constraints }} {{ $constraints }}{{ end }}{{ if $defaultValue }} DEFAULT {{ $defaultValue }}{{ end }},
    {{- end }}
    {{- end }}
    
    -- Primary keys
    PRIMARY KEY ({{ primaryKeys . }}){{ if hasForeignKeys . }},{{ end }}
    
    {{- if hasForeignKeys . }}
    -- Foreign keys
    {{- range .Fields }}
    {{- $foreignKey := fieldExtension . "sql.options.foreign_key" }}
    {{- if $foreignKey }}
    {{- $columnName := or (fieldExtension . "sql.options.column_name") (snakeCase .GoName) }}
    {{- $refTable := index $foreignKey "table" }}
    {{- $refColumn := or (index $foreignKey "column") "id" }}
    {{- $onDelete := or (index $foreignKey "on_delete") "RESTRICT" }}
    {{- $onUpdate := or (index $foreignKey "on_update") "RESTRICT" }}
    FOREIGN KEY ({{ $columnName }}) REFERENCES {{ $refTable }}({{ $refColumn }}) ON DELETE {{ $onDelete }} ON UPDATE {{ $onUpdate }}{{ if not (isLastForeignKey . $message) }},{{ end }}
    {{- end }}
    {{- end }}
    {{- end }}
) ENGINE={{ $engine }} CHARACTER SET={{ $charset }} COLLATE={{ $collation }}{{ if $comment }} COMMENT='{{ $comment }}'{{ end }};

{{- range .Fields }}
{{- $index := fieldExtension . "sql.options.index" }}
{{- if $index }}
{{- $columnName := or (fieldExtension . "sql.options.column_name") (snakeCase .GoName) }}
-- Index: {{ $index }}
CREATE INDEX {{ $index }} ON {{ $tableName }} ({{ $columnName }});
{{- end }}
{{- end }}

{{ end }}
{{ end }}