// GENERATION_BEHAVIOR: overwrite
// Code generated by protoc-gen-anything. DO NOT EDIT.
package models

import (
	"time"
	
	"gorm.io/gorm"
)

{{ range .File.Enums }}
// {{ .GoIdent.GoName }} represents the {{ .Comments.Leading }}
type {{ .GoIdent.GoName }} string

// {{ .GoIdent.GoName }} enum values
const (
	{{- range .Values }}
	{{- if ne .GoName (printf "%s_UNSPECIFIED" .GoIdent.GoName) }}
	{{ .GoName }} {{ $.GoIdent.GoName }} = "{{ lowerCamelCase (trimPrefix .GoName (printf "%s_" $.GoIdent.GoName)) }}"
	{{- end }}
	{{- end }}
)
{{ end }}

{{ range .File.Messages }}
{{- $message := . }}
{{- $isTable := messageExtension . "sql.options.is_table" }}
{{- $skip := messageExtension . "sql.options.skip" }}
{{- if and (not $skip) (or $isTable (isNil $isTable)) }}
{{- $tableName := or (messageExtension . "sql.options.table_name") (snakeCase .GoIdent.GoName) }}

// {{ .GoIdent.GoName }} represents a row in the {{ $tableName }} table
type {{ .GoIdent.GoName }} struct {
	{{- range .Fields }}
	{{- $fieldSkip := fieldExtension . "sql.options.skip" }}
	{{- if not $fieldSkip }}
	{{- $columnName := or (fieldExtension . "sql.options.column_name") (snakeCase .GoName) }}
	{{- $primaryKey := fieldExtension . "sql.options.primary_key" }}
	{{- $foreignKey := fieldExtension . "sql.options.foreign_key" }}
	{{- $omitempty := not (contains "NOT NULL" (or (fieldExtension . "sql.options.constraints") "")) }}
	
	// {{ .Comments.Leading }}
	{{ .GoIdent.GoName }} {{ goType . }} `json:"{{ lowerCamelCase .GoName }}{{ if $omitempty }},omitempty{{ end }}" gorm:"column:{{ $columnName }}{{ if $primaryKey }};primaryKey{{ end }}{{ if $foreignKey }};foreignKey:{{ $columnName }}{{ end }}"`
	{{- end }}
	{{- end }}
	
	{{- /* Add relationships */ -}}
	{{- range $rel := getRelationships $message }}
	{{ $rel.Name }} {{ $rel.Type }} `json:"{{ lowerCamelCase $rel.JSONName }},omitempty" gorm:"foreignKey:{{ $rel.ForeignKey }}"` 
	{{- end }}
}

// TableName returns the database table name for {{ .GoIdent.GoName }}
func ({{ substr .GoIdent.GoName 0 1 | lower }} *{{ .GoIdent.GoName }}) TableName() string {
	return "{{ $tableName }}"
}

{{ end }}
{{ end }}