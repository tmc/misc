# GENERATION_BEHAVIOR: overwrite
# GraphQL schema generated from Protocol Buffers
# DO NOT EDIT - Generated by protoc-gen-anything

schema {
  query: Query
  mutation: Mutation
}

# Root Query object
type Query {
{{- range .File.Services }}
{{- $service := . }}
{{- range .Methods }}
{{- if hasPrefix "Get" .GoName | or (hasPrefix "List" .GoName) }}
  # {{ .Comments.Leading }}
  {{ lowerFirst .GoName }}({{ graphqlArgs .Input }}): {{ graphqlReturn .Output }}
{{- end }}
{{- end }}
{{- end }}
}

# Root Mutation object
type Mutation {
{{- range .File.Services }}
{{- $service := . }}
{{- range .Methods }}
{{- if not (or (hasPrefix "Get" .GoName) (hasPrefix "List" .GoName)) }}
  # {{ .Comments.Leading }}
  {{ lowerFirst .GoName }}({{ graphqlArgs .Input }}): {{ graphqlReturn .Output }}
{{- end }}
{{- end }}
{{- end }}
}

# Scalars
scalar DateTime
scalar JSON

{{- /* Generate GraphQL types for messages */ -}}
{{- range .File.Messages }}
{{- $message := . }}
{{- $msgOptions := messageExtension . "graphql.options.skip" }}
{{- if not $msgOptions }}
{{- $isInputType := messageExtension . "graphql.options.input_type" }}
{{- $isInterface := messageExtension . "graphql.options.interface" }}
{{- $typeName := or (messageExtension . "graphql.options.name") .GoIdent.GoName }}

{{- if $isInterface }}
# {{ or (messageExtension . "graphql.options.description") .Comments.Leading }}
interface {{ $typeName }} {
{{- range .Fields }}
{{- $skipField := fieldExtension . "graphql.options.skip" }}
{{- if not $skipField }}
  # {{ or (fieldExtension . "graphql.options.description") .Comments.Leading }}
  {{ or (fieldExtension . "graphql.options.name") (lowerFirst .GoName) }}: {{ graphqlFieldType . }}
{{- end }}
{{- end }}
}
{{- else if $isInputType }}
# {{ or (messageExtension . "graphql.options.description") .Comments.Leading }}
input {{ $typeName }}Input {
{{- range .Fields }}
{{- $skipField := fieldExtension . "graphql.options.skip" }}
{{- if not $skipField }}
  # {{ or (fieldExtension . "graphql.options.description") .Comments.Leading }}
  {{ or (fieldExtension . "graphql.options.name") (lowerFirst .GoName) }}: {{ graphqlInputFieldType . }}
{{- end }}
{{- end }}
}
{{- else }}
# {{ or (messageExtension . "graphql.options.description") .Comments.Leading }}
type {{ $typeName }} {
{{- range .Fields }}
{{- $skipField := fieldExtension . "graphql.options.skip" }}
{{- if not $skipField }}
  # {{ or (fieldExtension . "graphql.options.description") .Comments.Leading }}
  {{ or (fieldExtension . "graphql.options.name") (lowerFirst .GoName) }}: {{ graphqlFieldType . }}
{{- end }}
{{- end }}
}
{{- end }}
{{- end }}
{{- end }}

{{- /* Generate GraphQL enums */ -}}
{{- range .File.Enums }}
# {{ .Comments.Leading }}
enum {{ .GoIdent.GoName }} {
{{- range .Values }}
{{- if ne .GoName (printf "%s_UNSPECIFIED" (upperCase (trimSuffix .GoIdent.GoName "Name"))) }}
  # {{ .Comments.Leading }}
  {{ .GoName }}
{{- end }}
{{- end }}
}
{{- end }}