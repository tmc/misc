#!/bin/bash
# get-latest-sandbox - Retrieves the most recent sandbox-exec container from git history
# Usage: get-latest-sandbox [-c] [-n|--namespace NAME] [GIT_REF]
#  -c  Show the commit hash for the latest sandbox-exec container
#  -n, --namespace NAME    Use a custom namespace for git notes (default: sandbox-exec)

set -euo pipefail

# allow showing the commit hash for the latest sandbox-exec container
SHOW_COMMIT_HASH=false
NAMESPACE="sandbox-exec"
GIT_REF="${1:-HEAD}"

# Parse command line arguments
while getopts ":c" opt; do
    case $opt in
        c)
            SHOW_COMMIT_HASH=true
            ;;
        n)
            NAMESPACE="$OPTARG"
            ;;
        \?)
            echo "Invalid option: -$OPTARG" >&2
            exit 1
            ;;
    esac
done

# usage:
usage() {
    echo "Usage: get-latest-sandbox [-c] [-n|--namespace NAME] [GIT_REF]" >&2
    echo "  -c  Show the commit hash for the latest sandbox-exec container" >&2
    echo "  -n, --namespace NAME    Use a custom namespace for git notes (default: sandbox-exec)" >&2
    exit 1
}

# Function to extract container name from a git note
extract_container_names() {
    local note="$1"
    # echo "$note" | grep -o 'sandbox-exec-[0-9]\+' | sort -u
    echo "$note" | grep -o "$NAMESPACE-[0-9]\+" | sort -u
}

# Initialize variables
latest_container=""
latest_timestamp=0
latest_commit=""

# Use git rev-list to get all commit hashes
commit_list=$(git rev-list --all $GIT_REF)

# Iterate through all commits
while read -r commit; do
    # Get the sandbox-exec note for the current commit
    note=$(git notes --ref=${NAMESPACE} show "$commit" 2>/dev/null || true)

    if [ -n "$note" ]; then
        container_names=$(extract_container_names "$note")
        while read -r container_name; do
            if [ -n "$container_name" ]; then
                # Extract timestamp from container name
                timestamp=$(echo "$container_name" | sed "s/${NAMESPACE}-//")
                # Update latest container if this one is more recent
                if [ "$timestamp" -gt "$latest_timestamp" ]; then
                    latest_container="$container_name"
                    latest_timestamp="$timestamp"
                    latest_commit="$commit"
                fi
            fi
        done <<< "$container_names"
    fi
done <<< "$commit_list"

# Show the commit hash if requested
if [ "$SHOW_COMMIT_HASH" = true ]; then
    echo "$latest_commit"
    exit 0
fi
if [ -n "$latest_container" ]; then
    echo "$latest_container"
else
    echo "No sandbox-exec container found in git history." >&2
    exit 1
fi
